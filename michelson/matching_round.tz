parameter (or (pair %contribute (pair (address %entry_address) (address %from_)) (pair (bytes %token_identifier) (nat %value))) (or (address %enter_round) (nat %sponsor)));
storage   (pair (pair (big_map %entries nat (pair (pair (address %address) (pair (nat %clr_match_ratio) (map %contributions bytes (list nat)))) (pair (pair (set %contributors address) (address %creator)) (pair (bool %deposit_withdrawn) (nat %status))))) (pair (big_map %entry_address_to_id address nat) (pair %round_event_timestamps (pair (timestamp %challenge_period_end) (timestamp %contribution_end)) (pair (timestamp %contribution_start) (pair (timestamp %cooldown_period_end) (timestamp %withdrawal_period_end)))))) (pair (pair (pair %round_meta (pair (address %dao_address) (address %donation_handler_address)) (pair (mutez %security_deposit_amount) (pair (address %stablecoin_address) (set %token_set bytes)))) (map %sponsors address nat)) (pair (nat %total_sponsored_amount) (nat %uuid))));
code
  {
    CAST (pair (or (pair (pair address address) (pair bytes nat)) (or address nat)) (pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)))); # pair (or (pair (pair address address) (pair bytes nat)) (or address nat)) (pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)))
    UNPAIR;     # or (pair (pair address address) (pair bytes nat)) (or address nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
    IF_LEFT
      {
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # == contribute ==
        # sp.verify(sp.sender == self.data.round_meta.donation_handler_address, 'NOT_ALLOWED') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (pair address address) (pair mutez (pair address (set bytes))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CDR;        # address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SENDER;     # @sender : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        EQ;         # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "NOT_ALLOWED"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # sp.verify(self.data.entry_address_to_id.contains(params.entry_address), 'INVALID_ENTRY_ADDRESS') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair address address) (pair bytes nat) : big_map address nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : big_map address nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # pair (pair address address) (pair bytes nat) : big_map address nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        MEM;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "INVALID_ENTRY_ADDRESS"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # sp.verify((sp.now >= self.data.round_event_timestamps.contribution_start) & (sp.now < self.data.round_event_timestamps.contribution_end), 'NOT_ACCEPTING_CONTRIBUTIONS') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 7;      # timestamp : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        NOW;        # @now : timestamp : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GE;         # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 5;      # pair timestamp timestamp : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CDR;        # timestamp : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NOW;        # @now : timestamp : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            LT;         # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH bool False; # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }; # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "NOT_ACCEPTING_CONTRIBUTIONS"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        # sp.verify(self.data.entries[self.data.entry_address_to_id[params.entry_address]].status == 0, 'ENTRY_NOT_ACTIVE') # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        PUSH nat 0; # nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DIG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair address address) (pair bytes nat)
        CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat)
        DUG 4;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 4;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:188 # @some : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 188; # int : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 6;      # nat : nat : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        EQ;         # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "ENTRY_NOT_ACTIVE"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # sp.verify(~ (self.data.entries[self.data.entry_address_to_id[params.entry_address]].contributors.contains(params.from_)), 'ALREADY_CONTRBUTED') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUG 3;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 3;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:188 # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 188; # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # pair (set address) address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # set address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair address address) (pair bytes nat) : set address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : set address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # pair (pair address address) (pair bytes nat) : set address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : set address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CDR;        # address : set address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        MEM;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {
            PUSH string "ALREADY_CONTRBUTED"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }
          {}; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # sp.verify((params.from_ != self.data.entries[self.data.entry_address_to_id[params.entry_address]].address) & (params.from_ != self.data.entries[self.data.entry_address_to_id[params.entry_address]].creator), 'SELF_CONTRIBUTION_NOT_ALLOWED') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUG 3;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 3;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:188 # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 188; # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address (pair nat (map bytes (list nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair address address) (pair bytes nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # pair (pair address address) (pair bytes nat) : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CDR;        # address : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        NEQ;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
            DUG 3;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP 3;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF_SOME
              {
                # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
              }
              {
                PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF_SOME
              {
                # of_some: Get-item:188 # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
              }
              {
                PUSH int 188; # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # pair (set address) address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CDR;        # address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (pair address address) (pair bytes nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUG 2;      # pair (pair address address) (pair bytes nat) : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair address address : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CDR;        # address : address : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NEQ;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH bool False; # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }; # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "SELF_CONTRIBUTION_NOT_ALLOWED"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # sp.verify(self.data.round_meta.token_set.contains(params.token_identifier), 'INVALID_TOKEN_IDENTIFIER') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (pair address address) (pair mutez (pair address (set bytes))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 6;      # set bytes : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair address address) (pair bytes nat) : set bytes : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : set bytes : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # pair (pair address address) (pair bytes nat) : set bytes : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # bytes : set bytes : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        MEM;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            PUSH string "INVALID_TOKEN_IDENTIFIER"; # string : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # if ~ (self.data.entries[self.data.entry_address_to_id[params.entry_address]].contributions.contains(params.token_identifier)): # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat)
        DUG 3;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 3;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:188 # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 188; # int : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address (pair nat (map bytes (list nat))) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 4;      # map bytes (list nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair address address) (pair bytes nat) : map bytes (list nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # pair (pair address address) (pair bytes nat) : pair (pair address address) (pair bytes nat) : map bytes (list nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # pair (pair address address) (pair bytes nat) : map bytes (list nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # bytes : map bytes (list nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        MEM;        # bool : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF
          {}
          {
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            # self.data.entries[self.data.entry_address_to_id[params.entry_address]].contributions[params.token_identifier] = sp.list([]) # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DIG 5;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            DUP 6;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            IF_SOME
              {
                # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
              }
              {
                PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
                FAILWITH;   # FAILED
              }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            DUP;        # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            DUG 2;      # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            IF_SOME
              {}
              {
                PUSH int 210; # int : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
                FAILWITH;   # FAILED
              }; # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            UNPAIR;     # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            UNPAIR;     # address : pair nat (map bytes (list nat)) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SWAP;       # pair nat (map bytes (list nat)) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            UNPAIR;     # nat : map bytes (list nat) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SWAP;       # map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PUSH (option (list nat)) (Some {}); # option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            DUP 10;     # pair (pair address address) (pair bytes nat) : option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            GET 3;      # bytes : option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            UPDATE;     # map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SWAP;       # nat : map bytes (list nat) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PAIR;       # pair nat (map bytes (list nat)) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SWAP;       # address : pair nat (map bytes (list nat)) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PAIR;       # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PAIR;       # pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SOME;       # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            SWAP;       # @some : option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            UPDATE;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PAIR;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
            SWAP;       # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }; # pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # self.data.entries[self.data.entry_address_to_id[params.entry_address]].contributions[params.token_identifier].push(params.value) # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 6;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP 6;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUG 2;      # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        IF_SOME
          {}
          {
            PUSH int 211; # int : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            FAILWITH;   # FAILED
          }; # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # address : pair nat (map bytes (list nat)) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # pair nat (map bytes (list nat)) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # nat : map bytes (list nat) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        SWAP;       # map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DIG 9;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP 11;     # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        IF_SOME
          {
            # of_some: Get-item:188 # @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
          }
          {
            PUSH int 188; # int : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            FAILWITH;   # FAILED
          }; # @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair address (pair nat (map bytes (list nat))) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 4;      # map bytes (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP 10;     # pair (pair address address) (pair bytes nat) : map bytes (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 3;      # bytes : map bytes (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET;        # option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        IF_SOME
          {
            # of_some: Get-item:211 # @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
          }
          {
            PUSH int 211; # int : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            FAILWITH;   # FAILED
          }; # @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP 10;     # pair (pair address address) (pair bytes nat) : @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 4;      # nat : @some : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CONS;       # list nat : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SOME;       # option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP 10;     # pair (pair address address) (pair bytes nat) : option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 3;      # bytes : option (list nat) : map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        UPDATE;     # map bytes (list nat) : nat : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SWAP;       # nat : map bytes (list nat) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PAIR;       # pair nat (map bytes (list nat)) : address : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SWAP;       # address : pair nat (map bytes (list nat)) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PAIR;       # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PAIR;       # pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SOME;       # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SWAP;       # @some : option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        UPDATE;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PAIR;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        # self.data.entries[self.data.entry_address_to_id[params.entry_address]].contributors.add(params.from_) # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat)
        DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        UNPAIR;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DUP;        # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        DIG 5;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET 3;      # big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP 6;      # pair (pair address address) (pair bytes nat) : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # pair address address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        CAR;        # address : big_map address nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET;        # option nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        IF_SOME
          {
            # of_some: Get-item:187 # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
          }
          {
            PUSH int 187; # int : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            FAILWITH;   # FAILED
          }; # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUP;        # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DUG 2;      # @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        GET;        # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        IF_SOME
          {}
          {
            PUSH int 212; # int : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
            FAILWITH;   # FAILED
          }; # @some : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        UNPAIR;     # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        SWAP;       # pair (pair (set address) address) (pair bool nat) : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        UNPAIR;     # pair (set address) address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        UNPAIR;     # set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        PUSH bool True; # bool : set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (pair address address) (pair bytes nat)
        DIG 9;      # pair (pair address address) (pair bytes nat) : bool : set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        CAR;        # pair address address : bool : set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        CDR;        # address : bool : set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        UPDATE;     # set address : address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        PAIR;       # pair (set address) address : pair bool nat : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        PAIR;       # pair (pair (set address) address) (pair bool nat) : pair address (pair nat (map bytes (list nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        SWAP;       # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) address) (pair bool nat) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        PAIR;       # pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        SOME;       # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : @some : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        SWAP;       # @some : option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        UPDATE;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        PAIR;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
        PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
        NIL operation; # list operation : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
      }
      {
        IF_LEFT
          {
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # == enter_round ==
            # sp.verify(~ (self.data.entry_address_to_id.contains(params)), 'ALREADY_IN_ROUND') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # big_map address nat : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # address : big_map address nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP;        # address : address : big_map address nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUG 2;      # address : big_map address nat : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            MEM;        # bool : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {
                PUSH string "ALREADY_IN_ROUND"; # string : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }
              {}; # address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # sp.verify(sp.now < self.data.round_event_timestamps.contribution_start, 'ENTRY_PERIOD_OVER') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 7;      # timestamp : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NOW;        # @now : timestamp : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            LT;         # bool : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {}
              {
                PUSH string "ENTRY_PERIOD_OVER"; # string : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # sp.verify(sp.amount == self.data.round_meta.security_deposit_amount, 'INVALID_SECURITY_DEPOSIT') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (pair address address) (pair mutez (pair address (set bytes))) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # mutez : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            AMOUNT;     # @amount : mutez : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            EQ;         # bool : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {}
              {
                PUSH string "INVALID_SECURITY_DEPOSIT"; # string : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # self.data.uuid += 1 # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            GET 6;      # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            PUSH nat 1; # nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            ADD;        # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            UPDATE 6;   # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # self.data.entries[self.data.uuid] = sp.record(address = params, clr_match_ratio = 0, contributions = {}, contributors = sp.set([]), creator = sp.sender, deposit_withdrawn = False, status = 0) # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PUSH (pair bool nat) (Pair False 0); # pair bool nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SENDER;     # @sender : pair bool nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            EMPTY_SET address; # set address : @sender : pair bool nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PAIR;       # pair (set address) @sender : pair bool nat : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PAIR;       # pair (pair (set address) @sender) (pair bool nat) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PUSH (pair nat (map bytes (list nat))) (Pair 0 {}); # pair nat (map bytes (list nat)) : pair (pair (set address) @sender) (pair bool nat) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP 6;      # address : pair nat (map bytes (list nat)) : pair (pair (set address) @sender) (pair bool nat) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PAIR;       # pair address (pair nat (map bytes (list nat))) : pair (pair (set address) @sender) (pair bool nat) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PAIR;       # pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) @sender) (pair bool nat)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SOME;       # option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) @sender) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DIG 5;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) @sender) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            GET 6;      # nat : option (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) @sender) (pair bool nat))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            UPDATE;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            PAIR;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            # self.data.entry_address_to_id[params] = self.data.uuid # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            UNPAIR;     # big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DIG 5;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            GET 6;      # nat : big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            SOME;       # option nat : big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : address
            DIG 5;      # address : option nat : big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
            UPDATE;     # big_map address nat : pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
            PAIR;       # pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
            SWAP;       # big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat))) : pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
            PAIR;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)
            PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NIL operation; # list operation : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }
          {
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            # == sponsor ==
            # sp.verify(~ (self.data.sponsors.contains(sp.sender)), 'ALREADY_SPONSORED') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CDR;        # map address nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SENDER;     # @sender : map address nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            MEM;        # bool : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {
                PUSH string "ALREADY_SPONSORED"; # string : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }
              {}; # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            # sp.verify(params > 0, 'ZERO_VALUE_NOT_ALLOWED') # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP;        # nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PUSH nat 0; # nat : nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            LT;         # bool : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {}
              {
                PUSH string "ZERO_VALUE_NOT_ALLOWED"; # string : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SWAP;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            # sp.verify(sp.now < self.data.round_event_timestamps.contribution_start, 'NOT_ACCEPTING_SPONSORS') # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat
            DUG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 7;      # timestamp : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NOW;        # @now : timestamp : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            COMPARE;    # int : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            LT;         # bool : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF
              {}
              {
                PUSH string "NOT_ACCEPTING_SPONSORS"; # string : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.round_meta.stablecoin_address, entry_point='transfer').open_some()) # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            NIL operation; # list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP 3;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 3;      # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CAR;        # pair (pair address address) (pair mutez (pair address (set bytes))) : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            GET 5;      # address : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            IF_SOME
              {}
              {
                PUSH int 112; # int : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
                FAILWITH;   # FAILED
              }; # @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SELF_ADDRESS; # @self : nat : mutez : @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            SENDER;     # @sender : @self : nat : mutez : @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            CONS;       # list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            # self.data.sponsors[sp.sender] = params # list operation : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
            DIG 2;      # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat
            UNPAIR;     # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : list operation : nat
            SWAP;       # pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            UNPAIR;     # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            UNPAIR;     # pair (pair address address) (pair mutez (pair address (set bytes))) : map address nat : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            SWAP;       # map address nat : pair (pair address address) (pair mutez (pair address (set bytes))) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            DUP 6;      # nat : map address nat : pair (pair address address) (pair mutez (pair address (set bytes))) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            SOME;       # option nat : map address nat : pair (pair address address) (pair mutez (pair address (set bytes))) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            SENDER;     # @sender : option nat : map address nat : pair (pair address address) (pair mutez (pair address (set bytes))) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            UPDATE;     # map address nat : pair (pair address address) (pair mutez (pair address (set bytes))) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            SWAP;       # pair (pair address address) (pair mutez (pair address (set bytes))) : map address nat : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            PAIR;       # pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat) : pair nat nat : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            PAIR;       # pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : list operation : nat
            SWAP;       # pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp)))) : pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat) : list operation : nat
            PAIR;       # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat
            # self.data.total_sponsored_amount += params # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat
            DUP;        # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat
            GET 5;      # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation : nat
            DIG 3;      # nat : nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation
            ADD;        # nat : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation
            UPDATE 5;   # pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)) : list operation
            SWAP;       # list operation : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
          }; # list operation : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
      }; # list operation : pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat))
    PAIR;       # pair (list operation) (pair (pair (big_map nat (pair (pair address (pair nat (map bytes (list nat)))) (pair (pair (set address) address) (pair bool nat)))) (pair (big_map address nat) (pair (pair timestamp timestamp) (pair timestamp (pair timestamp timestamp))))) (pair (pair (pair (pair address address) (pair mutez (pair address (set bytes)))) (map address nat)) (pair nat nat)))
  };