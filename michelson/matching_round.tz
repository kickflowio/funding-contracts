parameter (or (or (pair %contribute (address %from_) (pair (address %entry_address) (pair (bytes %token_identifier) (nat %value)))) (or (list %disqualify_entries nat) (address %enter_round))) (or (or (map %set_clr_matches nat nat) (nat %sponsor)) (or (address %withdraw_deposit) (address %withdraw_match))));
storage   (pair (pair (pair (big_map %contributions (pair address nat) (pair (bytes %token_identifier) (nat %value))) (big_map %entries nat (pair (address %address) (pair (address %creator) (pair (nat %status) (pair (nat %clr_match) (bool %deposit_withdrawn))))))) (pair (big_map %entry_address_to_id address nat) (bool %matches_set))) (pair (pair (pair %round_event_timestamps (timestamp %contribution_start) (pair (timestamp %contribution_end) (pair (timestamp %cooldown_period_end) (timestamp %challenge_period_end)))) (pair %round_meta (set %token_set bytes) (pair (mutez %security_deposit_amount) (pair (address %dao_address) (pair (address %stablecoin_address) (pair (address %donation_handler_address) (address %community_fund_address))))))) (pair (map %sponsors address nat) (pair (nat %total_sponsored_amount) (nat %uuid)))));
code
  {
    CAST (pair (or (or (pair address (pair address (pair bytes nat))) (or (list nat) address)) (or (or (map nat nat) nat) (or address address))) (pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))))); # pair (or (or (pair address (pair address (pair bytes nat))) (or (list nat) address)) (or (or (map nat nat) nat) (or address address))) (pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))))
    UNPAIR;     # or (or (pair address (pair address (pair bytes nat))) (or (list nat) address)) (or (or (map nat nat) nat) (or address address)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
    IF_LEFT
      {
        IF_LEFT
          {
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # == contribute ==
            # sp.verify(sp.sender == self.data.round_meta.donation_handler_address, 'NOT_ALLOWED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 11;     # address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SENDER;     # @sender : address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            EQ;         # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "NOT_ALLOWED"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # sp.verify(self.data.entry_address_to_id.contains(params.entry_address), 'INVALID_ENTRY_ADDRESS') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # big_map address nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair address (pair address (pair bytes nat)) : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUG 2;      # pair address (pair address (pair bytes nat)) : big_map address nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # address : big_map address nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            MEM;        # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "INVALID_ENTRY_ADDRESS"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # sp.verify((sp.now >= self.data.round_event_timestamps.contribution_start) & (sp.now < self.data.round_event_timestamps.contribution_end), 'NOT_ACCEPTING_CONTRIBUTIONS') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # timestamp : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            NOW;        # @now : timestamp : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GE;         # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # timestamp : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH bool False; # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }; # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "NOT_ACCEPTING_CONTRIBUTIONS"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            # sp.verify(self.data.entries[self.data.entry_address_to_id[params.entry_address]].status == 0, 'ENTRY_NOT_ACTIVE') # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            PUSH nat 0; # nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair address (pair address (pair bytes nat))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair address (pair address (pair bytes nat))
            CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair address (pair address (pair bytes nat))
            CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair address (pair address (pair bytes nat))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat))
            DUG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP 4;      # pair address (pair address (pair bytes nat)) : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF_SOME
              {
                # of_some: Get-item:222 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH int 222; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF_SOME
              {
                # of_some: Get-item:223 # @some : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH int 223; # int : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # @some : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 5;      # nat : nat : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            EQ;         # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "ENTRY_NOT_ACTIVE"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # sp.verify(~ (self.data.contributions.contains((params.from_, self.data.entry_address_to_id[params.entry_address]))), 'ALREADY_CONTRBUTED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CAR;        # big_map (pair address nat) (pair bytes nat) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat))
            DUG 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # big_map address nat : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP 3;      # pair address (pair address (pair bytes nat)) : big_map address nat : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # address : big_map address nat : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET;        # option nat : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF_SOME
              {
                # of_some: Get-item:222 # @some : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH int 222; # int : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # @some : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP 3;      # pair address (pair address (pair bytes nat)) : @some : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # address : @some : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            PAIR;       # pair address @some : big_map (pair address nat) (pair bytes nat) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            MEM;        # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {
                PUSH string "ALREADY_CONTRBUTED"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }
              {}; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # sp.verify((params.from_ != self.data.entries[self.data.entry_address_to_id[params.entry_address]].address) & (params.from_ != self.data.entries[self.data.entry_address_to_id[params.entry_address]].creator), 'SELF_CONTRIBUTION_NOT_ALLOWED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat))
            DUG 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP 3;      # pair address (pair address (pair bytes nat)) : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF_SOME
              {
                # of_some: Get-item:222 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH int 222; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF_SOME
              {
                # of_some: Get-item:223 # @some : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH int 223; # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # @some : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair address (pair address (pair bytes nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUG 2;      # pair address (pair address (pair bytes nat)) : address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            CAR;        # address : address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            NEQ;        # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat))
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat))
                DUG 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair address (pair address (pair bytes nat)) : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:222 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 222; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:223 # @some : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 223; # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair address (pair address (pair bytes nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUG 2;      # pair address (pair address (pair bytes nat)) : address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # address : address : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NEQ;        # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                PUSH bool False; # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }; # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "SELF_CONTRIBUTION_NOT_ALLOWED"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # sp.verify(self.data.round_meta.token_set.contains(params.token_identifier), 'INVALID_TOKEN_IDENTIFIER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 3;      # set bytes : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair address (pair address (pair bytes nat)) : set bytes : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : set bytes : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUG 2;      # pair address (pair address (pair bytes nat)) : set bytes : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 5;      # bytes : set bytes : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            MEM;        # bool : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            IF
              {}
              {
                PUSH string "INVALID_TOKEN_IDENTIFIER"; # string : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                FAILWITH;   # FAILED
              }; # pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            # self.data.contributions[(params.from_, self.data.entry_address_to_id[params.entry_address])] = sp.record(token_identifier = params.token_identifier, value = params.value) # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat))
            DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DIG 4;      # pair address (pair address (pair bytes nat)) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 6;      # nat : pair address (pair address (pair bytes nat)) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SWAP;       # pair address (pair address (pair bytes nat)) : nat : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUP;        # pair address (pair address (pair bytes nat)) : pair address (pair address (pair bytes nat)) : nat : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DUG 6;      # pair address (pair address (pair bytes nat)) : nat : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            GET 5;      # bytes : nat : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            PAIR;       # pair bytes nat : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            SOME;       # option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat)) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            DIG 6;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            GET 3;      # big_map address nat : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            DUP 7;      # pair address (pair address (pair bytes nat)) : big_map address nat : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            GET 3;      # address : big_map address nat : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            GET;        # option nat : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            IF_SOME
              {
                # of_some: Get-item:222 # @some : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
              }
              {
                PUSH int 222; # int : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
                FAILWITH;   # FAILED
              }; # @some : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair address (pair address (pair bytes nat))
            DIG 6;      # pair address (pair address (pair bytes nat)) : @some : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            CAR;        # address : @some : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            PAIR;       # pair address @some : option (pair bytes nat) : big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            UPDATE;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
            PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
            NIL operation; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
          }
          {
            IF_LEFT
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                # == disqualify_entries ==
                # sp.verify(sp.sender == self.data.round_meta.dao_address, 'NOT_ALLOWED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 7;      # address : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SENDER;     # @sender : address : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                EQ;         # bool : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "NOT_ALLOWED"; # string : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                # sp.verify(sp.now < self.data.round_event_timestamps.cooldown_period_end, 'COOLDOWN_PERIOD_OVER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # timestamp : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "COOLDOWN_PERIOD_OVER"; # string : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # for entry_id in params: ... # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # list nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                ITER
                  {
                    # if self.data.entries[entry_id].status == 1: # nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    PUSH nat 1; # nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    DUP 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    DUP 3;      # nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    IF_SOME
                      {
                        # of_some: Get-item:268 # @some : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                      }
                      {
                        PUSH int 268; # int : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }; # @some : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    GET 5;      # nat : nat : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    COMPARE;    # int : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    EQ;         # bool : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    IF
                      {
                        PUSH string "ENTRY_ALREADY_DISQUALIFIED"; # string : nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    # self.data.entries[entry_id].status = 1 # nat : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : list nat
                    UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : list nat
                    UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : list nat
                    UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : list nat
                    SWAP;       # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : list nat
                    DUP;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : list nat
                    DIG 5;      # nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    DUP;        # nat : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    DUG 2;      # nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    IF_SOME
                      {}
                      {
                        PUSH int 270; # int : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    PUSH nat 1; # nat : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    UPDATE 5;   # @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    SOME;       # option (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    SWAP;       # nat : option (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    UPDATE;     # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    SWAP;       # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list nat
                    PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list nat
                    SWAP;       # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }; # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.send(self.data.round_meta.community_fund_address, sp.mul(sp.fst(sp.ediv(self.data.round_meta.security_deposit_amount, sp.mutez(1)).open_some(message = sp.unit)) * sp.len(params), sp.mutez(1))) # list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 12;     # address : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONTRACT unit; # option (contract unit) : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {}
                  {
                    PUSH int 274; # int : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH mutez 1; # mutez : @some : list operation : list nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 3;      # list nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SIZE;       # nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH mutez 1; # mutez : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 6;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : mutez : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # mutez : mutez : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                EDIV;       # option (pair nat mutez) : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {}
                  {
                    UNIT;       # unit : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # nat : nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MUL;        # nat : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MUL;        # mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNIT;       # unit : mutez : @some : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONS;       # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # == enter_round ==
                # sp.verify(~ (self.data.entry_address_to_id.contains(params)), 'ALREADY_IN_ROUND') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # address : address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUG 2;      # address : big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MEM;        # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {
                    PUSH string "ALREADY_IN_ROUND"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(sp.now < self.data.round_event_timestamps.contribution_start, 'ENTRY_PERIOD_OVER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "ENTRY_PERIOD_OVER"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(sp.amount == self.data.round_meta.security_deposit_amount, 'INVALID_SECURITY_DEPOSIT') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # mutez : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                AMOUNT;     # @amount : mutez : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                EQ;         # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "INVALID_SECURITY_DEPOSIT"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # self.data.uuid += 1 # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                GET 8;      # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                PUSH nat 1; # nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                ADD;        # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                UPDATE 8;   # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # self.data.entries[self.data.uuid] = sp.record(address = params, creator = sp.sender, status = 0, clr_match = 0, deposit_withdrawn = False) # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH bool False; # bool : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH nat 0; # nat : bool : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # nat : nat : bool : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SENDER;     # @sender : nat : nat : bool : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 9;      # address : @sender : nat : nat : bool : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PAIR 5;     # pair address (pair @sender (pair nat (pair nat bool))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SOME;       # option (pair address (pair @sender (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 6;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : option (pair address (pair @sender (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                GET 8;      # nat : option (pair address (pair @sender (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                UPDATE;     # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                SWAP;       # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # self.data.entry_address_to_id[params] = self.data.uuid # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (big_map address nat) bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 5;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                GET 8;      # nat : big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                SOME;       # option nat : big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : address
                DIG 5;      # address : option nat : big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
                UPDATE;     # big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
                PAIR;       # pair (big_map address nat) bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
                SWAP;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
                PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))
                PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
          }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                # == set_clr_matches ==
                # sp.verify(sp.sender == self.data.round_meta.dao_address, 'NOT_ALLOWED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 7;      # address : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SENDER;     # @sender : address : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                EQ;         # bool : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "NOT_ALLOWED"; # string : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                # sp.verify(sp.now > self.data.round_event_timestamps.cooldown_period_end, 'COOLDOWN_NOT_OVER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # timestamp : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GT;         # bool : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "COOLDOWN_NOT_OVER"; # string : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                # if ~ self.data.matches_set: # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 4;      # bool : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                    # self.data.round_event_timestamps.challenge_period_end = sp.add_seconds(sp.now, 604800) # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                    UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    UNPAIR;     # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    UNPAIR;     # pair timestamp (pair timestamp (pair timestamp timestamp)) : pair (set bytes) (pair mutez (pair address (pair address (pair address address)))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    NOW;        # @now : pair timestamp (pair timestamp (pair timestamp timestamp)) : pair (set bytes) (pair mutez (pair address (pair address (pair address address)))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    PUSH int 604800; # int : @now : pair timestamp (pair timestamp (pair timestamp timestamp)) : pair (set bytes) (pair mutez (pair address (pair address (pair address address)))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    ADD;        # timestamp : pair timestamp (pair timestamp (pair timestamp timestamp)) : pair (set bytes) (pair mutez (pair address (pair address (pair address address)))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    UPDATE 6;   # pair timestamp (pair timestamp (pair timestamp timestamp)) : pair (set bytes) (pair mutez (pair address (pair address (pair address address)))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    PAIR;       # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : pair (map address nat) (pair nat nat) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    PAIR;       # pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : map nat nat
                    SWAP;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    # self.data.matches_set = True # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # pair (big_map address nat) bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    CAR;        # big_map address nat : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PUSH bool True; # bool : big_map address nat : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # big_map address nat : bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (big_map address nat) bool : pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                    SWAP;       # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }; # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                # sp.verify(sp.now < self.data.round_event_timestamps.challenge_period_end, 'CLR_SETTING_PERIOD_OVER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 6;      # timestamp : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "CLR_SETTING_PERIOD_OVER"; # string : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # for entry_id in params.keys(): ... # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # map nat nat : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                ITER
                  {
                    CAR;        # nat : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    # self.data.entries[entry_id].clr_match = params[entry_id] # nat : map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : map nat nat
                    UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    SWAP;       # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DUP;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DUP 6;      # nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DUP;        # nat : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DUG 2;      # nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    IF_SOME
                      {}
                      {
                        PUSH int 306; # int : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                        FAILWITH;   # FAILED
                      }; # @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DUP 8;      # map nat nat : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : nat : map nat nat
                    DIG 7;      # nat : map nat nat : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    GET;        # option nat : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    IF_SOME
                      {
                        # of_some: Get-item:306 # @some : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                      }
                      {
                        PUSH int 306; # int : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                        FAILWITH;   # FAILED
                      }; # @some : @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    UPDATE 7;   # @some : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SOME;       # option (pair address (pair address (pair nat (pair nat bool)))) : nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # nat : option (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    UPDATE;     # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    SWAP;       # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : map nat nat
                    PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : map nat nat
                    SWAP;       # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }; # map nat nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DROP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                # == sponsor ==
                # sp.verify(~ (self.data.sponsors.contains(sp.sender)), 'ALREADY_SPONSORED') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # map address nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SENDER;     # @sender : map address nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MEM;        # bool : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {
                    PUSH string "ALREADY_SPONSORED"; # string : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.verify(params > 0, 'ZERO_VALUE_NOT_ALLOWED') # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH nat 0; # nat : nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "ZERO_VALUE_NOT_ALLOWED"; # string : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                # sp.verify(sp.now < self.data.round_event_timestamps.contribution_start, 'NOT_ACCEPTING_SPONSORS') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # timestamp : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                LT;         # bool : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "NOT_ACCEPTING_SPONSORS"; # string : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.transfer(sp.record(from_ = sp.sender, to_ = sp.self_address, value = params), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.round_meta.stablecoin_address, entry_point='transfer').open_some()) # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 9;      # address : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {}
                  {
                    PUSH int 139; # int : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH mutez 0; # mutez : @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # nat : mutez : @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SELF_ADDRESS; # @self : nat : mutez : @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SENDER;     # @sender : @self : nat : mutez : @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PAIR 3;     # pair @sender (pair @self nat) : mutez : @some : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                TRANSFER_TOKENS; # operation : list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONS;       # list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # self.data.sponsors[sp.sender] = params # list operation : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                GET 5;      # map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                DUP 4;      # nat : map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                SOME;       # option nat : map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                SENDER;     # @sender : option nat : map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                UPDATE;     # map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                UPDATE 5;   # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                # self.data.total_sponsored_amount += params # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                GET 7;      # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : nat
                DIG 3;      # nat : nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation
                ADD;        # nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation
                UPDATE 7;   # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation
                SWAP;       # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
          }
          {
            IF_LEFT
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # == withdraw_deposit ==
                # sp.verify(self.data.entry_address_to_id.contains(params), 'INVALID_ENTRY_ADDRESS') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # address : address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUG 2;      # address : big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MEM;        # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "INVALID_ENTRY_ADDRESS"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.verify(self.data.entries[self.data.entry_address_to_id[params]].status != 1, 'ENTRY_DISQUALIFIED') # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH nat 1; # nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:364 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 364; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:365 # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 365; # int : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # nat : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NEQ;        # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "ENTRY_DISQUALIFIED"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(sp.now > self.data.round_event_timestamps.cooldown_period_end, 'COOLDOWN_NOT_OVER') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GT;         # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "COOLDOWN_NOT_OVER"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(~ self.data.entries[self.data.entry_address_to_id[params]].deposit_withdrawn, 'DEPOSIT_ALREADY_WITHDRAWN') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address
                DUG 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:364 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 364; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:365 # @some : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 365; # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 8;      # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {
                    PUSH string "DEPOSIT_ALREADY_WITHDRAWN"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.send(self.data.entries[self.data.entry_address_to_id[params]].creator, self.data.round_meta.security_deposit_amount) # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address
                DUG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:364 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 364; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:365 # @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 365; # int : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # address : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONTRACT unit; # option (contract unit) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {}
                  {
                    PUSH int 379; # int : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNIT;       # unit : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                TRANSFER_TOKENS; # operation : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONS;       # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # self.data.entries[self.data.entry_address_to_id[params]].deposit_withdrawn = True # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 7;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                DIG 7;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                IF_SOME
                  {
                    # of_some: Get-item:364 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                  }
                  {
                    PUSH int 364; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                DUP;        # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                DUG 2;      # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                IF_SOME
                  {}
                  {
                    PUSH int 381; # int : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                    FAILWITH;   # FAILED
                  }; # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PUSH bool True; # bool : @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                UPDATE 8;   # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SOME;       # option (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SWAP;       # @some : option (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                UPDATE;     # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SWAP;       # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation
                SWAP;       # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }
              {
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # == withdraw_match ==
                # sp.verify(self.data.entry_address_to_id.contains(params), 'INVALID_ENTRY_ADDRESS') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # address : address : big_map address nat : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUG 2;      # address : big_map address nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                MEM;        # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "INVALID_ENTRY_ADDRESS"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.verify(self.data.entries[self.data.entry_address_to_id[params]].status == 0, 'ENTRY_NOT_ACTIVE') # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH nat 0; # nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:316 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 316; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:317 # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 317; # int : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 5;      # nat : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                EQ;         # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "ENTRY_NOT_ACTIVE"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(self.data.matches_set, 'MATCHES_NOT_SET') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 4;      # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "MATCHES_NOT_SET"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                # sp.verify(sp.now > self.data.round_event_timestamps.challenge_period_end, 'CHALLENGE_PERIOD_ONGOING') # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address
                DUG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair timestamp (pair timestamp (pair timestamp timestamp)) : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 6;      # timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NOW;        # @now : timestamp : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GT;         # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "CHALLENGE_PERIOD_ONGOING"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.verify(self.data.entries[self.data.entry_address_to_id[params]].clr_match != 0, 'ZERO_CLR_MATCH') # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH nat 0; # nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 2;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address
                DUG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 4;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:316 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 316; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:317 # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 317; # int : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 7;      # nat : nat : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                COMPARE;    # int : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NEQ;        # bool : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF
                  {}
                  {
                    PUSH string "ZERO_CLR_MATCH"; # string : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # sp.transfer(sp.record(from_ = sp.self_address, to_ = self.data.entries[self.data.entry_address_to_id[params]].address, value = self.data.entries[self.data.entry_address_to_id[params]].clr_match), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), self.data.round_meta.stablecoin_address, entry_point='transfer').open_some()) # address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                NIL operation; # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address))))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 9;      # address : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONTRACT %transfer (pair address (pair address nat)); # option (contract (pair address (pair address nat))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {}
                  {
                    PUSH int 335; # int : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PUSH mutez 0; # mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 4;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : @some : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : @some : list operation : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : @some : list operation : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : @some : list operation : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : mutez : @some : list operation : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address
                DUG 6;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 6;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:316 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 316; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:317 # @some : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 317; # int : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 7;      # nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 5;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : mutez : @some : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : mutez : @some : list operation : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : mutez : @some : list operation : address
                CAR;        # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : mutez : @some : list operation : address
                CDR;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : nat : mutez : @some : list operation : address
                SWAP;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address
                DUP;        # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address
                DUG 7;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 7;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:316 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 316; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                IF_SOME
                  {
                    # of_some: Get-item:317 # @some : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                  }
                  {
                    PUSH int 317; # int : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                    FAILWITH;   # FAILED
                  }; # @some : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CAR;        # address : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                TRANSFER_TOKENS; # operation : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                CONS;       # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                # self.data.entries[self.data.entry_address_to_id[params]].status = 2 # list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP 3;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                UNPAIR;     # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                SWAP;       # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DUP;        # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
                DIG 7;      # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                CAR;        # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                GET 3;      # big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation : address
                DIG 7;      # address : big_map address nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                GET;        # option nat : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                IF_SOME
                  {
                    # of_some: Get-item:316 # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                  }
                  {
                    PUSH int 316; # int : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                    FAILWITH;   # FAILED
                  }; # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                DUP;        # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                DUG 2;      # @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                GET;        # option (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                IF_SOME
                  {}
                  {
                    PUSH int 354; # int : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                    FAILWITH;   # FAILED
                  }; # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PUSH nat 2; # nat : @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                UPDATE 5;   # @some : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SOME;       # option (pair address (pair address (pair nat (pair nat bool)))) : @some : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SWAP;       # @some : option (pair address (pair address (pair nat (pair nat bool)))) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                UPDATE;     # big_map nat (pair address (pair address (pair nat (pair nat bool)))) : big_map (pair address nat) (pair bytes nat) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                SWAP;       # big_map (pair address nat) (pair bytes nat) : big_map nat (pair address (pair address (pair nat (pair nat bool)))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool))))) : pair (big_map address nat) bool : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool) : pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)) : list operation
                PAIR;       # pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))) : list operation
                SWAP;       # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
              }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
          }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
      }; # list operation : pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat)))
    PAIR;       # pair (list operation) (pair (pair (pair (big_map (pair address nat) (pair bytes nat)) (big_map nat (pair address (pair address (pair nat (pair nat bool)))))) (pair (big_map address nat) bool)) (pair (pair (pair timestamp (pair timestamp (pair timestamp timestamp))) (pair (set bytes) (pair mutez (pair address (pair address (pair address address)))))) (pair (map address nat) (pair nat nat))))
  };